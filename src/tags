!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
ALLOW_DEBUG_COMMANDS	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	130;"	d	language:C++
BLOCKCHAIN_TIMESTAMP_CHECK_WINDOW	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   BLOCKCHAIN_TIMESTAMP_CHECK_WINDOW             = 60;$/;"	m	language:C++	namespace:CryptoNote::parameters
blockId	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const char* blockId;$/;"	m	language:C++	struct:CryptoNote::CheckpointData
BLOCKS_IDS_SYNCHRONIZING_DEFAULT_COUNT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const size_t   BLOCKS_IDS_SYNCHRONIZING_DEFAULT_COUNT        =  10000;  \/\/by default, blocks ids count in synchronizing$/;"	m	language:C++	namespace:CryptoNote
BLOCKS_SYNCHRONIZING_DEFAULT_COUNT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const size_t   BLOCKS_SYNCHRONIZING_DEFAULT_COUNT            =  200;    \/\/by default, blocks count in blocks downloading$/;"	m	language:C++	namespace:CryptoNote
BLOCK_MAJOR_VERSION_1	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint8_t  BLOCK_MAJOR_VERSION_1                         =  1;$/;"	m	language:C++	namespace:CryptoNote
BLOCK_MINOR_VERSION_0	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint8_t  BLOCK_MINOR_VERSION_0                         =  0;$/;"	m	language:C++	namespace:CryptoNote
CheckpointData	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  struct CheckpointData {$/;"	s	language:C++	namespace:CryptoNote
CHECKPOINTS	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const std::initializer_list<CheckpointData> CHECKPOINTS = {$/;"	m	language:C++	namespace:CryptoNote
COMMAND_RPC_GET_BLOCKS_FAST_MAX_COUNT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const size_t   COMMAND_RPC_GET_BLOCKS_FAST_MAX_COUNT         =  1000;$/;"	m	language:C++	namespace:CryptoNote
CryptoNote	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^namespace CryptoNote {$/;"	n	language:C++
CRYPTONOTE_BLOCKCHAIN_INDICES_FILENAME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const char     CRYPTONOTE_BLOCKCHAIN_INDICES_FILENAME[]      = "blockchainindices.dat";$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_BLOCKINDEXES_FILENAME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const char     CRYPTONOTE_BLOCKINDEXES_FILENAME[]            = "blockindexes.dat";$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_BLOCKSCACHE_FILENAME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const char     CRYPTONOTE_BLOCKSCACHE_FILENAME[]             = "blockscache.dat";$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_BLOCKS_FILENAME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const char     CRYPTONOTE_BLOCKS_FILENAME[]                  = "blocks.dat";$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_BLOCK_FUTURE_TIME_LIMIT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t CRYPTONOTE_BLOCK_FUTURE_TIME_LIMIT            = 60 * 60 * 2;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE     = 10000; \/\/size of block (bytes) after which reward for block calculated using block size$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_COINBASE_BLOB_RESERVED_SIZE	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   CRYPTONOTE_COINBASE_BLOB_RESERVED_SIZE        = 600;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_DISPLAY_DECIMAL_POINT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   CRYPTONOTE_DISPLAY_DECIMAL_POINT              = 8;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_BLOCKS	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_BLOCKS     = 1;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_SECONDS	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_SECONDS    = DIFFICULTY_TARGET * CRYPTONOTE_LOCKED_TX_ALLOWED_DELTA_BLOCKS;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_MAX_BLOCK_BLOB_SIZE	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   CRYPTONOTE_MAX_BLOCK_BLOB_SIZE                = 500000000;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_MAX_BLOCK_NUMBER	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t CRYPTONOTE_MAX_BLOCK_NUMBER                   = 500000000;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_MAX_TX_SIZE	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   CRYPTONOTE_MAX_TX_SIZE                        = 1000000000;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_MEMPOOL_TX_FROM_ALT_BLOCK_LIVETIME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t CRYPTONOTE_MEMPOOL_TX_FROM_ALT_BLOCK_LIVETIME = 60 * 60 * 24 * 7; \/\/seconds, one week$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_MEMPOOL_TX_LIVETIME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t CRYPTONOTE_MEMPOOL_TX_LIVETIME                = 60 * 60 * 24;     \/\/seconds, one day$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_MINED_MONEY_UNLOCK_WINDOW	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   CRYPTONOTE_MINED_MONEY_UNLOCK_WINDOW          = 60;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_NAME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const char     CRYPTONOTE_NAME[]                             = "ffscoin";$/;"	m	language:C++	namespace:CryptoNote
CRYPTONOTE_NUMBER_OF_PERIODS_TO_FORGET_TX_DELETED_FROM_POOL	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t CRYPTONOTE_NUMBER_OF_PERIODS_TO_FORGET_TX_DELETED_FROM_POOL = 7;  \/\/ CRYPTONOTE_NUMBER_OF_PERIODS_TO_FORGET_TX_DELETED_FROM_POOL * CRYPTONOTE_MEMPOOL_TX_LIVETIME = time to forget tx$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_POOLDATA_FILENAME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const char     CRYPTONOTE_POOLDATA_FILENAME[]                = "poolstate.bin";$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t CRYPTONOTE_PUBLIC_ADDRESS_BASE58_PREFIX       = 0xde7;$/;"	m	language:C++	namespace:CryptoNote::parameters
CRYPTONOTE_REWARD_BLOCKS_WINDOW	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   CRYPTONOTE_REWARD_BLOCKS_WINDOW               = 100;$/;"	m	language:C++	namespace:CryptoNote::parameters
CURRENT_TRANSACTION_VERSION	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint8_t  CURRENT_TRANSACTION_VERSION                   =  1;$/;"	m	language:C++	namespace:CryptoNote
DEFAULT_DUST_THRESHOLD	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t DEFAULT_DUST_THRESHOLD                        = MINIMUM_FEE;$/;"	m	language:C++	namespace:CryptoNote::parameters
DIFFICULTY_CUT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   DIFFICULTY_CUT                                = 60;  \/\/ timestamps to cut after sorting$/;"	m	language:C++	namespace:CryptoNote::parameters
DIFFICULTY_LAG	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   DIFFICULTY_LAG                                = 15;$/;"	m	language:C++	namespace:CryptoNote::parameters
DIFFICULTY_TARGET	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t DIFFICULTY_TARGET                             = 120; \/\/ seconds$/;"	m	language:C++	namespace:CryptoNote::parameters
DIFFICULTY_WINDOW	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   DIFFICULTY_WINDOW                             = EXPECTED_NUMBER_OF_BLOCKS_PER_DAY; \/\/ blocks$/;"	m	language:C++	namespace:CryptoNote::parameters
EMISSION_SPEED_FACTOR	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const unsigned EMISSION_SPEED_FACTOR                         = 18;$/;"	m	language:C++	namespace:CryptoNote::parameters
EXPECTED_NUMBER_OF_BLOCKS_PER_DAY	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t EXPECTED_NUMBER_OF_BLOCKS_PER_DAY             = 24 * 60 * 60 \/ DIFFICULTY_TARGET;$/;"	m	language:C++	namespace:CryptoNote::parameters
FUSION_TX_MAX_SIZE	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   FUSION_TX_MAX_SIZE                            = CRYPTONOTE_BLOCK_GRANTED_FULL_REWARD_ZONE * 30 \/ 100;$/;"	m	language:C++	namespace:CryptoNote::parameters
FUSION_TX_MIN_INPUT_COUNT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   FUSION_TX_MIN_INPUT_COUNT                     = 12;$/;"	m	language:C++	namespace:CryptoNote::parameters
FUSION_TX_MIN_IN_OUT_COUNT_RATIO	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   FUSION_TX_MIN_IN_OUT_COUNT_RATIO              = 4;$/;"	m	language:C++	namespace:CryptoNote::parameters
GENESIS_COINBASE_TX_HEX	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const char     GENESIS_COINBASE_TX_HEX[]                     = "013c01ff0001ffffffffffff0f029b2e4c0281c0b02e7c53291a94d1d0cbff8883f8024f5142ee494ffbbd088071210156e2eeb2ec0e01879136b97f791add7596fa74aacdf71ed66ed1bc5307bdf269";$/;"	m	language:C++	namespace:CryptoNote
height	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    uint32_t height;$/;"	m	language:C++	struct:CryptoNote::CheckpointData
MAX_BLOCK_SIZE_GROWTH_SPEED_DENOMINATOR	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t MAX_BLOCK_SIZE_GROWTH_SPEED_DENOMINATOR       = 365 * 24 * 60 * 60 \/ DIFFICULTY_TARGET;$/;"	m	language:C++	namespace:CryptoNote::parameters
MAX_BLOCK_SIZE_GROWTH_SPEED_NUMERATOR	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t MAX_BLOCK_SIZE_GROWTH_SPEED_NUMERATOR         = 100 * 1024;$/;"	m	language:C++	namespace:CryptoNote::parameters
MAX_BLOCK_SIZE_INITIAL	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const size_t   MAX_BLOCK_SIZE_INITIAL                        =  20 * 1024;$/;"	m	language:C++	namespace:CryptoNote::parameters
MINER_CONFIG_FILE_NAME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const char     MINER_CONFIG_FILE_NAME[]                      = "miner_conf.json";$/;"	m	language:C++	namespace:CryptoNote::parameters
MINIMUM_FEE	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t MINIMUM_FEE                                   = 100000;$/;"	m	language:C++	namespace:CryptoNote::parameters
MONEY_SUPPLY	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const uint64_t MONEY_SUPPLY                                  = ((uint64_t)(-1));$/;"	m	language:C++	namespace:CryptoNote::parameters
P2P_CONNECTION_MAX_WRITE_BUFFER_SIZE	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const size_t   P2P_CONNECTION_MAX_WRITE_BUFFER_SIZE          = 16 * 1024 * 1024; \/\/ 16 MB$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_CONNECTIONS_COUNT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint32_t P2P_DEFAULT_CONNECTIONS_COUNT                 = 8;$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_CONNECTION_TIMEOUT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint32_t P2P_DEFAULT_CONNECTION_TIMEOUT                = 5000;          \/\/ 5 seconds$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_HANDSHAKE_INTERVAL	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint32_t P2P_DEFAULT_HANDSHAKE_INTERVAL                = 60;            \/\/ seconds$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_HANDSHAKE_INVOKE_TIMEOUT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const size_t   P2P_DEFAULT_HANDSHAKE_INVOKE_TIMEOUT          = 5000;          \/\/ 5 seconds$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_INVOKE_TIMEOUT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint64_t P2P_DEFAULT_INVOKE_TIMEOUT                    = 60 * 2 * 1000; \/\/ 2 minutes$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_PACKET_MAX_SIZE	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint32_t P2P_DEFAULT_PACKET_MAX_SIZE                   = 50000000;      \/\/ 50000000 bytes maximum packet size$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_PEERS_IN_HANDSHAKE	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint32_t P2P_DEFAULT_PEERS_IN_HANDSHAKE                = 250;$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_PING_CONNECTION_TIMEOUT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const uint32_t P2P_DEFAULT_PING_CONNECTION_TIMEOUT           = 2000;          \/\/ 2 seconds$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_PORT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const int      P2P_DEFAULT_PORT                              = 10298;$/;"	m	language:C++	namespace:CryptoNote
P2P_DEFAULT_WHITELIST_CONNECTIONS_PERCENT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const size_t   P2P_DEFAULT_WHITELIST_CONNECTIONS_PERCENT     = 70;$/;"	m	language:C++	namespace:CryptoNote
P2P_LOCAL_GRAY_PEERLIST_LIMIT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const size_t   P2P_LOCAL_GRAY_PEERLIST_LIMIT                 =  5000;$/;"	m	language:C++	namespace:CryptoNote
P2P_LOCAL_WHITE_PEERLIST_LIMIT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const size_t   P2P_LOCAL_WHITE_PEERLIST_LIMIT                =  1000;$/;"	m	language:C++	namespace:CryptoNote
P2P_NET_DATA_FILENAME	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    const char     P2P_NET_DATA_FILENAME[]                       = "p2pstate.bin";$/;"	m	language:C++	namespace:CryptoNote::parameters
P2P_STAT_TRUSTED_PUB_KEY	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const char     P2P_STAT_TRUSTED_PUB_KEY[]                    = "8f80f9a5a434a9f1510d13336228debfee9c918ce505efe225d8c94d045fa115";$/;"	m	language:C++	namespace:CryptoNote
parameters	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  namespace parameters {$/;"	n	language:C++	namespace:CryptoNote
RPC_DEFAULT_PORT	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const int      RPC_DEFAULT_PORT                              = 10299;$/;"	m	language:C++	namespace:CryptoNote
SEED_NODES	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^  const std::initializer_list<const char*> SEED_NODES = {$/;"	m	language:C++	namespace:CryptoNote
static_assert	/home/dmitry/work/ffscoin/src/CryptoNoteConfig.h	/^    static_assert(EMISSION_SPEED_FACTOR <= 8 * sizeof(uint64_t), "Bad EMISSION_SPEED_FACTOR");$/;"	p	language:C++	namespace:CryptoNote::parameters
